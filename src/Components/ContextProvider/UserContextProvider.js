/* eslint-disable max-len */
/* eslint-disable import/no-extraneous-dependencies */
// UserContext.js
import {
  createContext, useContext, useState,
} from 'react';
import PropTypes from 'prop-types';

const UserContext = createContext();

const UserContextProvider = ({ children }) => {
  const [inputCountry, setCountryValue] = useState('');
  const [inputContinent, setContinentValue] = useState('');
  const [selectedContinent, setSelectedContinent] = useState('');

  // Handler function to update the selected continent when an option is chosen
  const handleContinentChange = (event) => {
    setSelectedContinent(event.target.value);
  };
  const changevalueofContinent = (event) => {
    setContinentValue(event.target.value);
  };
  // const storedTodos = localStorage.getItem('activities');
  // const initialState = storedTodos ? JSON.parse(storedTodos) : [];
  // const [state, dispatch] = useReducer(reducer, initialState);
  // useEffect(() => {
  //   localStorage.setItem('activities', JSON.stringify(state));
  // }, [state]);

  const contextValue = {
    dummyArray: [2, 9, 14, 16, 17],
    inputContinent,
    inputCountry,
    setCountryValue,
    changevalueofContinent,
    selectedContinent,
    handleContinentChange,
    continents: [
      'Africa',
      'Antarctica',
      'Asia',
      'Europe',
      'North America',
      'Australia (Oceania)',
      'South America',
    ],
    countriesByContinent: {
      Africa: [
        'Algeria',
        'Angola',
        'Benin',
        'Botswana',
        'Burkina Faso',
        'Burundi',
        'Cabo Verde',
        'Cameroon',
        'Central African Republic',
        'Chad',
        'Comoros',
        'Congo (Brazzaville)',
        'Congo (Kinshasa)',
        "Cote d'Ivoire",
        'Djibouti',
        'Egypt',
        'Equatorial Guinea',
        'Eritrea',
        'Eswatini',
        'Ethiopia',
        'Gabon',
        'Gambia',
        'Ghana',
        'Guinea',
        'Guinea-Bissau',
        'Kenya',
        'Lesotho',
        'Liberia',
        'Libya',
        'Madagascar',
        'Malawi',
        'Mali',
        'Mauritania',
        'Mauritius',
        'Morocco',
        'Mozambique',
        'Namibia',
        'Niger',
        'Nigeria',
        'Rwanda',
        'Sao Tome and Principe',
        'Senegal',
        'Seychelles',
        'Sierra Leone',
        'Somalia',
        'South Africa',
        'South Sudan',
        'Sudan',
        'Tanzania',
        'Togo',
        'Tunisia',
        'Uganda',
        'Zambia',
        'Zimbabwe',
      ],
      Asia: [
        'Afghanistan',
        'Armenia',
        'Azerbaijan',
        'Bahrain',
        'Bangladesh',
        'Bhutan',
        'Brunei',
        'Cambodia',
        'China',
        'Cyprus',
        'Georgia',
        'India',
        'Indonesia',
        'Iran',
        'Iraq',
        'Israel',
        'Japan',
        'Jordan',
        'Kazakhstan',
        'Kuwait',
        'Kyrgyzstan',
        'Laos',
        'Lebanon',
        'Malaysia',
        'Maldives',
        'Mongolia',
        'Myanmar (Burma)',
        'Nepal',
        'North Korea',
        'Oman',
        'Pakistan',
        'Palestine',
        'Philippines',
        'Qatar',
        'Saudi Arabia',
        'Singapore',
        'South Korea',
        'Sri Lanka',
        'Syria',
        'Tajikistan',
        'Thailand',
        'Timor-Leste',
        'Turkey',
        'Turkmenistan',
        'United Arab Emirates',
        'Uzbekistan',
        'Vietnam',
        'Yemen',
      ],
      Europe: [
        'Albania',
        'Andorra',
        'Austria',
        'Belarus',
        'Belgium',
        'Bosnia and Herzegovina',
        'Bulgaria',
        'Croatia',
        'Cyprus',
        'Czech Republic',
        'Denmark',
        'Estonia',
        'Finland',
        'France',
        'Germany',
        'Greece',
        'Hungary',
        'Iceland',
        'Ireland',
        'Italy',
        'Kosovo',
        'Latvia',
        'Liechtenstein',
        'Lithuania',
        'Luxembourg',
        'Malta',
        'Moldova',
        'Monaco',
        'Montenegro',
        'Netherlands',
        'North Macedonia',
        'Norway',
        'Poland',
        'Portugal',
        'Romania',
        'Russia',
        'San Marino',
        'Serbia',
        'Slovakia',
        'Slovenia',
        'Spain',
        'Sweden',
        'Switzerland',
        'Ukraine',
        'United Kingdom',
        'Vatican City',
      ],
      NorthAmerica: [
        'Canada',
        'United States',
        'Mexico',
        'Guatemala',
        'Belize',
        'El Salvador',
        'Honduras',
        'Nicaragua',
        'Costa Rica',
        'Panama',
        'Jamaica',
        'Haiti',
        'Dominican Republic',
        'Cuba',
        'The Bahamas',
        'Trinidad and Tobago',
        'Barbados',
        'Saint Kitts and Nevis',
        'Antigua and Barbuda',
        'Saint Vincent and the Grenadines',
        'Saint Lucia',
        'Grenada',
        'Dominica',
      ],
      SouthAmerica: [
        'Argentina',
        'Brazil',
        'Chile',
        'Colombia',
        'Ecuador',
        'Guyana',
        'Paraguay',
        'Peru',
        'Suriname',
        'Uruguay',
        'Venezuela',
        'Bolivia',
      ],
      AustraliaOceania: [
        'Australia',
        'Fiji',
        'New Zealand',
        'Papua New Guinea',
        'Solomon Islands',
        'Vanuatu',
        'Samoa',
        'Tonga',
        'Kiribati',
        'Tuvalu',
        'Micronesia',
        'Marshall Islands',
        'Palau',
        'Nauru',
      ],
    },
    continentMaps: {
      Africa: 'public/Assets/Africa_unnamed_colour.jpg',
      Antarctica: 'public/Assets/Antarctica_unnamed_colour.jpg',
      Asia: 'public/Assets/Asia_unnamed_colour.jpg',
      Europe: 'public/Assets/Europe_unnamed_colour.jpg',
      NorthAmerica: 'public/Assets/NAmerica_unnamed_colour.jpg',
      AustraliaOceania: 'public/Assets/Oceania_unnamed_colour.jpg',
      SouthAmerica: 'public/Assets/SAmerica_unnamed_colour.jpg',
    },
  };

  return (
    <UserContext.Provider value={contextValue}>
      {children}
    </UserContext.Provider>
  );
};

UserContextProvider.propTypes = {
  children: PropTypes.node.isRequired,
};

const useSharedContextforSlice = () => {
  useContext(UserContext);
};

export { UserContextProvider, useSharedContextforSlice, UserContext };
